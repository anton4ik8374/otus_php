# версия синтаксиса
version: '3.9'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  web: #контейнер с Nginx
    build: # создать docker-образ из dockerFile
      context: ./nginx # путь в контексте которого будет создан docker-образ
      dockerfile: Dockerfile # путь до dockerFile из которого будет собран docker-образ
    image: nginx:latest
    container_name: nginx # имя docker-контейнера
    ports:  # проброс портов
      - "80:80"
    volumes:  #  монтирование директорий, директория-на-хост-машине:директория-в-докере
       - ./code:/data/mysite.local
       - ./nginx/hosts/default.conf:/etc/nginx/conf.d/default.conf
    depends_on: # данный сервис будет запущен только после запуска сервиса под именем php-fpm
      - php-fpm
    networks: # имя сети к котором будет подключен docker-контейнер
      - app-network

  php-fpm: #Контейнер с PHP-FPM, назовём его php-fpm
    # Если нет секции build, то система будет искать образ в репозиториях
    build: # создать docker-образ из dockerFile
      context: ./fpm # путь в контексте которого будет создан docker-образ
      dockerfile: Dockerfile # путь до dockerFile из которого будет собран docker-образ
    image: php:8-fpm # тэг docker-образа из https://hub.docker.com/
    container_name: php-fpm # имя контейнера после запуска
    volumes: #  монтирование директорий, директория-на-хост-машине:директория-в-докере
       - ./code:/data/mysite.local
       - ./fpm/php.ini:/usr/local/etc/php/conf.d/php-custom.ini
    depends_on: # данный сервис будет запущен только после запуска сервиса под именем db
       - db
    networks: # имя сети к котором будет подключен docker-контейнер
      - app-network

  # контейнер с MySQL | Postgres
  # строим на базе стандартного образа
  db:
    image: postgres:14.1-alpine # тэг docker-образа из https://hub.docker.com/
    container_name: dbp
    ports:
      - "3306:3306"
    # описываем, какую БД мы создаём
    environment: # переменные окружения которые использует docker-контейнер
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB} # переменные окружения которые использует docker-контейнер
    volumes:
      - ./dbdata:/var/lib/mysql  
    networks:
      - app-network
  # Консльное прилижение работает как CLI необходимо composer
  workspace:
    image: php:8-cli
    container_name: console
    working_dir: /data/mysite.local
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
    depends_on: # данный сервис будет запущен только после запуска сервиса под именем php-fpm
      - web

# явно объявленные сети
networks:
  app-network:
    driver: bridge